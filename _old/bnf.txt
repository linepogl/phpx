

<program> ::= [ <class> ]*

<class> ::= <access_modifier> <overridability_modifier> <identifier>
            [ : <identifier> [ , <identifier> ]* ]
            { [ <class_element> ] * }

<class_element> ::= <class_variable_declaration>
                  | <class_method_declaration>
                  | <class_property_declaration>
                  | <class>

<class_variable_declaration> ::= <access_modifier> <identifier> <identifier>
                                 [ = <expression> ];

<class_method_declaration> ::= <access_modifier> <overridability_modifier> <identifier>
                               ( [ <argument_declaration> [ , <argument_declaration> ]* ] )
                               <block>

<code> ::= <statement> | <block>
<block> ::= { [ <code> ]* }
<statement> ::= <variable_declaration> ;
              | <variable_assignment> ;
              | <expression> ;


<variable_declaration> ::= <identifier> <identifier> [ = <expression> ] ;
<variable_assignment> ::= <identifier> <ass_op> <expression> ;

<expression> ::= <term> [ <add_op> <expression> ];
<term> ::= <factor> [ <mul_op> <term> ];
<factor> ::= <variable> | <function_call> | (<expression>);